//
//  CatalogPresenter.swift
//  Catalog
//
//  Created by Filip Gulan on 01/02/2019.
//  Copyright (c) 2019 Infinum. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import RxSwift
import RxCocoa

final class CatalogPresenter {

    // MARK: - Private properties -

    private unowned let _view: CatalogViewInterface
    private let _wireframe: CatalogWireframeInterface
    private let _disposeBag = DisposeBag()

    // MARK: - Lifecycle -

    init(view: CatalogViewInterface, wireframe: CatalogWireframeInterface) {
        _view = view
        _wireframe = wireframe
    }
}

// MARK: - Extensions -

extension CatalogPresenter: CatalogPresenterInterface {
    
    func sections() -> [TableSectionItem] {
        let didSelectRelay = PublishRelay<CatalogItem>()
        
        _handle(didSelect: didSelectRelay)
        return [
            _createTestItemsSection(didSelect: didSelectRelay)
        ]
    }
    
}

private extension CatalogPresenter {
    
    func _createTestItemsSection(didSelect: PublishRelay<CatalogItem>) -> TableSectionItem {
        let ratio = CatalogItem(
            model: RatioTransitionViewController.self,
            didSelect: didSelect
        )
        return CatalogSection.init(title: "Test", items: [ratio])
    }
    
    func _handle(didSelect: PublishRelay<CatalogItem>) {
        didSelect
            .subscribe(onNext: { [unowned _wireframe] in
                _wireframe.show($0.model)
            })
            .disposed(by: _disposeBag)
    }
}
