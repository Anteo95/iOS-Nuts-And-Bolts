//
//  NetworkingJapxViewController.swift
//  Catalog
//
//  Created by Mate Masnov on 02/12/2019.
//  Copyright (c) 2019 Infinum. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class NetworkingJapxViewController: UIViewController {

    // MARK: - Public properties -

    @IBOutlet weak var passwordTextField: UITextField!
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var usernameTextField: UITextField!
    
    @IBOutlet weak var createUserButton: UIButton!
    @IBOutlet weak var getUserButton: UIButton!
    @IBOutlet weak var updateUserButton: UIButton!
    @IBOutlet weak var deleteUserButton: UIButton!
    
    var presenter: NetworkingJapxPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        
        updateView(with: .UserDoesNotExist)
    }
	
    @IBAction func createUserActionHandler(_ sender: Any) {
        presenter.didPressCreate(with: emailTextField.text, username: usernameTextField.text, password: passwordTextField.text)
    }
    
    @IBAction func getUserActionHandler(_ sender: Any) {
        presenter.didPressGet()
    }
    
    @IBAction func updateUserActionHandler(_ sender: Any) {
        presenter.didPressUpdate(email: emailTextField.text, username: usernameTextField.text)
    }
    
    @IBAction func deleteUserActionHandler(_ sender: Any) {
        presenter.didPressDelete()
    }
    
}


// MARK: - Extensions -

extension NetworkingJapxViewController: NetworkingJapxViewInterface {
    
    func updateView(with state: NetworkingJapx.State) {
        createUserButton.setEnabledAndAlpha(with: state == .UserDoesNotExist)
        getUserButton.setEnabledAndAlpha(with: state == .UserExists)
        updateUserButton.setEnabledAndAlpha(with: state == .UserExists)
        deleteUserButton.setEnabledAndAlpha(with: state == .UserExists)
    }

}

extension NetworkingJapxViewController: Catalogizable {
    
    static var title: String {
        return "Japx Networking"
    }
    
    static var viewController: UIViewController {
        return NetworkingJapxWireframe().viewController
    }
    
}

private extension UIButton {
    
    func setEnabledAndAlpha(with shouldEnable: Bool) {
        self.isEnabled = shouldEnable
        self.alpha = shouldEnable ? 1 : 0.3
    }
}
