//
//  CombineNetworkingViewController.swift
//  Catalog
//
//  Created by Zvonimir Medak on 29.10.2021..
//  Copyright (c) 2021 Infinum. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import Combine

@available(iOS 13, *)
final class CombineNetworkingViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: CombineNetworkingPresenterInterface!

    // MARK: - Private properties -

    private var subscriptions: [AnyCancellable] = []

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        configure()
    }

}

// MARK: - Extensions -

@available(iOS 13, *)
extension CombineNetworkingViewController: CombineNetworkingViewInterface {

    func configure() {
        let output = CombineNetworking.ViewOutput(
            email: Just("ios.team@infinum.hr").eraseToAnyPublisher(),
            password: Just("infinum1").eraseToAnyPublisher(),
            login: Just(()).eraseToAnyPublisher()
        )

        let input = presenter.configure(with: output)

        input
            .didLogin
            .sink(receiveCompletion: { print($0) }, receiveValue: { print("Login: \($0)") })
            .store(in: &subscriptions)

    }
}

@available(iOS 13, *)
extension CombineNetworkingViewController: Catalogizable {

    static var title: String {
        return "Combine Networking"
    }

    static var viewController: UIViewController {
        return CombineNetworkingWireframe().viewController
    }

}
