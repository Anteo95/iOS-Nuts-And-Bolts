//
//  RxNetworkingPresenter.swift
//
//  Created by Filip Gulan on 25/04/2019.
//  Copyright (c) 2019 Infinum. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import RxSwift
import RxCocoa

final class RxNetworkingPresenter {

    // MARK: - Private properties -

    private unowned let view: RxNetworkingViewInterface
    private let interactor: RxNetworkingInteractorInterface
    private let wireframe: RxNetworkingWireframeInterface

    // MARK: - Lifecycle -

    init(view: RxNetworkingViewInterface, interactor: RxNetworkingInteractorInterface, wireframe: RxNetworkingWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension RxNetworkingPresenter: RxNetworkingPresenterInterface {

    func configure(with output: RxNetworking.ViewOutput) -> RxNetworking.ViewInput {
        let userInfo = Driver
            .combineLatest(output.email, output.password)
        let didLogin = output
            .login
            .withLatestFrom(userInfo)
            .flatMapLatest { [unowned interactor] in
                return interactor
                    .login(email: $0, password: $1)
                    .mapTo(true)
                    .asDriver(onErrorJustReturn: false)
            }
        return RxNetworking.ViewInput(didLogin: didLogin)
    }

}
